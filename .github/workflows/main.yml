name: CICD

on:
  push:
    branches: [mater,main]
  pull_request:
    types: [opened, synchronize, closed]    

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3

      - name: Set Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install Dependencies
        run: npm install

      # - name: Test Project
      #   run: npm test

  notify:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'  # Only run if commit is in main branch

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Get Commit Info
        run: |
          echo "COMMIT_MESSAGE=$(git log -1 --pretty=format:'%s')" >> $GITHUB_ENV
          echo "COMMIT_TAG=$(git describe --tags --always)" >> $GITHUB_ENV

      - name: Send Slack Notification
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "ðŸš€ *GitHub Action Notification*",
              "attachments": [
                {
                  "color": "${{ needs.build.result == 'success' && 'good' || 'danger' }}",
                  "fields": [
                    { "title": "Repository", "value": "${{ github.repository }}", "short": true },
                    { "title": "Branch", "value": "${{ github.ref_name }}", "short": true },
                    { "title": "Event", "value": "${{ github.event_name }}", "short": true },
                    { "title": "Commit Message", "value": "${{ env.COMMIT_MESSAGE }}", "short": false },
                    { "title": "Commit Tag", "value": "${{ env.COMMIT_TAG }}", "short": false },
                    { "title": "Build Status", "value": "${{ needs.build.result }}", "short": true }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
