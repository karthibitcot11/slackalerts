name: CICD
on:
  push:
    branches: [main]

jobs:

# on:
#   pull_request:
#     types:
#       - closed  # Triggers when a PR is merged
#     branches:
#       - master

# jobs:
#   check-merge:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Verify PR Merge
#         run: |
#           if [ "${{ github.event.pull_request.merged }}" != "true" ]; then
#             echo "PR not merged, exiting."
#             exit 1
#           fi

  build:
    runs-on: ubuntu-latest
    needs: check-merge
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3

      - name: Set Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install Dependencies
        run: npm install

      - name: Test Project
        run: npm test || echo "Tests not defined, continuing..."

  generate-preview-urls:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Generate Preview URLs
        run: |
          echo "PREVIEW_URL=https://preview-${{ github.run_id }}.example.com" >> $GITHUB_ENV
          echo "BRANCH_PREVIEW_URL=https://${{ github.head_ref }}.example.com" >> $GITHUB_ENV

  notify:
    runs-on: ubuntu-latest
    needs: generate-preview-urls
    if: always()
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Get Commit Info
        run: |
          echo "COMMIT_MESSAGE=$(git log -1 --pretty=format:'%s')" >> $GITHUB_ENV
          echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          echo "REPO_URL=https://github.com/${GITHUB_REPOSITORY}/actions" >> $GITHUB_ENV
          echo "SSH_HOST=www-data@dev5.rt.gw" >> $GITHUB_ENV

      - name: Send Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_USERNAME: "rtBot"
          SLACK_COLOR: "${{ needs.build.result == 'success' && 'good' || 'danger' }}"
          SLACK_MESSAGE: |
            *${{ github.actor }}* merged a PR into master.
            *Preview URL:* <${{ env.PREVIEW_URL }}|Preview>
            *Branch Preview URL:* <${{ env.BRANCH_PREVIEW_URL }}|Branch Preview>
            *Ref:* `${{ github.ref }}`
            *SSH Host:* `${{ env.SSH_HOST }}`
            *Event:* `${{ github.event_name }}`
            *Repo Action URL:* <${{ env.REPO_URL }}|GitHub Actions>
            *Message:* `${{ env.COMMIT_MESSAGE }}`
            *Build Status:* `${{ needs.build.result }}`
            *PR Status:* Approved âœ…
          SLACK_FOOTER: "Powered By rtCamp's GitHub Actions Library"
